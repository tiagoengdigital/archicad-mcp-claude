# This file is auto-generated by generate_tools.py. DO NOT EDIT.
import logging
from pydantic import ValidationError
from multiconn_archicad.basic_types import Port
from tapir_archicad_mcp.app import mcp
from tapir_archicad_mcp.context import multi_conn_instance

from multiconn_archicad.models.commands import (
    ApplyFavoritesToElementDefaultsParameters,
ApplyFavoritesToElementDefaultsResult,
CreateFavoritesFromElementsParameters,
CreateFavoritesFromElementsResult
)


log = logging.getLogger()


@mcp.tool(
    name="favorites_apply_favorites_to_element_defaults",
    title="ApplyFavoritesToElementDefaults",
    description="Apply the given favorites to element defaults."
)
def apply_favorites_to_element_defaults(port: int, params: ApplyFavoritesToElementDefaultsParameters) -> ApplyFavoritesToElementDefaultsResult:
    """
    Apply the given favorites to element defaults.

    To find a valid 'port' number, use the 'tapir_discovery_list_active_archicads' tool.
    """
    log.info(f"Executing apply_favorites_to_element_defaults tool on port {port}")
    multi_conn = multi_conn_instance.get()
    target_port = Port(port)
    if target_port not in multi_conn.active:
        raise ValueError(f"Port {port} is not an active Archicad connection.")
    conn_header = multi_conn.active[target_port]
    try:

        result_dict = conn_header.core.post_tapir_command(
            command="ApplyFavoritesToElementDefaults",
            parameters=params.model_dump(mode='json')
        )
        return ApplyFavoritesToElementDefaultsResult.model_validate(result_dict)

    except ValidationError as e:
        log.error(f"Validation error for ApplyFavoritesToElementDefaults result: {e}")
        raise ValueError(f"Received an invalid response from the Archicad API: {e}")
    except Exception as e:
        log.error(f"Error executing ApplyFavoritesToElementDefaults on port {port}: {e}")
        raise e



@mcp.tool(
    name="favorites_create_favorites_from_elements",
    title="CreateFavoritesFromElements",
    description="Create favorites from the given elements."
)
def create_favorites_from_elements(port: int, params: CreateFavoritesFromElementsParameters) -> CreateFavoritesFromElementsResult:
    """
    Create favorites from the given elements.

    To find a valid 'port' number, use the 'tapir_discovery_list_active_archicads' tool.
    """
    log.info(f"Executing create_favorites_from_elements tool on port {port}")
    multi_conn = multi_conn_instance.get()
    target_port = Port(port)
    if target_port not in multi_conn.active:
        raise ValueError(f"Port {port} is not an active Archicad connection.")
    conn_header = multi_conn.active[target_port]
    try:

        result_dict = conn_header.core.post_tapir_command(
            command="CreateFavoritesFromElements",
            parameters=params.model_dump(mode='json')
        )
        return CreateFavoritesFromElementsResult.model_validate(result_dict)

    except ValidationError as e:
        log.error(f"Validation error for CreateFavoritesFromElements result: {e}")
        raise ValueError(f"Received an invalid response from the Archicad API: {e}")
    except Exception as e:
        log.error(f"Error executing CreateFavoritesFromElements on port {port}: {e}")
        raise e
